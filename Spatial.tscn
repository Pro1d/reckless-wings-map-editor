[gd_scene load_steps=16 format=2]

[ext_resource path="res://scripts/VoxelModifier.gd" type="Script" id=1]

[sub_resource type="FastNoiseLite" id=18]
fractal_octaves = 5

[sub_resource type="Curve" id=16]
_data = [ Vector2( 0, 0 ), 0.0, 0.972913, 0, 0, Vector2( 0.391304, 0.427273 ), 1.01431, 1.01431, 0, 0, Vector2( 0.495674, 0.5 ), 0.288414, 0.288414, 0, 0, Vector2( 0.639061, 0.563636 ), 1.28705, 1.28705, 0, 0, Vector2( 1, 1 ), 1.12051, 0.0, 0, 0 ]

[sub_resource type="VoxelGeneratorGraph" id=17]
graph_data = {
"connections": [ [ 17, 0, 16, 1 ], [ 1, 0, 14, 0 ], [ 1, 0, 12, 0 ], [ 10, 0, 31, 0 ], [ 12, 0, 9, 0 ], [ 13, 0, 33, 0 ], [ 14, 0, 21, 0 ], [ 16, 0, 7, 0 ], [ 2, 0, 5, 0 ], [ 21, 0, 22, 0 ], [ 22, 0, 17, 0 ], [ 23, 0, 28, 0 ], [ 23, 0, 29, 1 ], [ 24, 0, 26, 0 ], [ 24, 0, 29, 0 ], [ 25, 0, 26, 1 ], [ 25, 0, 28, 1 ], [ 26, 0, 27, 1 ], [ 26, 0, 30, 1 ], [ 26, 0, 13, 1 ], [ 27, 0, 32, 1 ], [ 28, 0, 27, 0 ], [ 28, 0, 33, 1 ], [ 29, 0, 30, 0 ], [ 3, 0, 12, 1 ], [ 3, 0, 14, 1 ], [ 30, 0, 31, 1 ], [ 31, 0, 32, 0 ], [ 32, 0, 16, 0 ], [ 33, 0, 5, 1 ], [ 5, 0, 4, 0 ], [ 7, 0, 13, 0 ], [ 9, 0, 10, 0 ] ],
"nodes": {
"1": {
"gui_position": Vector2( 300, 120 ),
"type": "InputX"
},
"10": {
"b": 0.5,
"gui_position": Vector2( 760, 100 ),
"type": "Add"
},
"12": {
"gui_position": Vector2( 480, 100 ),
"noise": SubResource( 18 ),
"type": "FastNoise2D"
},
"13": {
"gui_position": Vector2( 1460, 100 ),
"type": "Multiply"
},
"14": {
"gui_position": Vector2( 480, 200 ),
"type": "Distance2D",
"x1": 0.0,
"y1": 0.0
},
"16": {
"gui_position": Vector2( 1180, 140 ),
"type": "Subtract"
},
"17": {
"b": 0.005,
"gui_position": Vector2( 900, 200 ),
"type": "Multiply"
},
"18": {
"a": 0.0,
"b": -40.0,
"gui_position": Vector2( 1800, 220 ),
"type": "Add"
},
"2": {
"gui_position": Vector2( 1600, 0 ),
"type": "InputY"
},
"21": {
"b": 100.0,
"gui_position": Vector2( 640, 200 ),
"type": "Subtract"
},
"22": {
"b": 0.0,
"gui_position": Vector2( 760, 200 ),
"type": "Max"
},
"23": {
"gui_position": Vector2( 580, -160 ),
"type": "Constant",
"value": 10.0
},
"24": {
"gui_position": Vector2( 580, -280 ),
"type": "Constant",
"value": 50.0
},
"25": {
"gui_position": Vector2( 580, -40 ),
"type": "Constant",
"value": -30.0
},
"26": {
"gui_position": Vector2( 820, -80 ),
"type": "Subtract"
},
"27": {
"gui_position": Vector2( 1040, -140 ),
"type": "Divide"
},
"28": {
"gui_position": Vector2( 820, -280 ),
"type": "Subtract"
},
"29": {
"gui_position": Vector2( 820, -180 ),
"type": "Subtract"
},
"3": {
"gui_position": Vector2( 300, 200 ),
"type": "InputZ"
},
"30": {
"gui_position": Vector2( 1040, -240 ),
"type": "Divide"
},
"31": {
"gui_position": Vector2( 900, 100 ),
"type": "Multiply"
},
"32": {
"gui_position": Vector2( 1040, 100 ),
"type": "Add"
},
"33": {
"gui_position": Vector2( 1600, 60 ),
"type": "Subtract"
},
"4": {
"gui_position": Vector2( 1920, 0 ),
"type": "OutputSDF"
},
"5": {
"gui_position": Vector2( 1760, 0 ),
"type": "SdfPlane"
},
"7": {
"curve": SubResource( 16 ),
"gui_position": Vector2( 1320, 140 ),
"type": "Curve"
},
"9": {
"b": 0.5,
"gui_position": Vector2( 640, 100 ),
"type": "Multiply"
}
}
}
use_subdivision = false

[sub_resource type="VoxelMesherTransvoxel" id=12]

[sub_resource type="Shader" id=13]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.beta's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
varying float height;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	vec4 world_pos = WORLD_MATRIX * vec4(VERTEX, 1.0);
	height = world_pos.y;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
	vec4 sand_color = vec4(1.0,0.9,0.0,1.0);
	vec4 grass_color = vec4(0.0,0.8,0.0,1.0);
	float k = height < 1.5 ? 1.0 : 0.0;
	vec4 color = sand_color * k + grass_color * (1.0 - k);
	ALBEDO = color.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )
shader_param/albedo = Color( 0.258824, 0.631373, 0, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[sub_resource type="VoxelGeneratorWaves" id=1]
channel = 0

[sub_resource type="Voxel" id=2]
voxel_name = "air"
transparent = true
transparency_index = 1

[sub_resource type="Voxel" id=3]
voxel_name = "solid"
geometry_type = 1
collision_aabbs = [ AABB( 0, 0, 0, 1, 1, 1 ) ]
cube_geometry/padding_y = null
cube_tiles/left = Vector2( 0, 0 )
cube_tiles/right = Vector2( 0, 0 )
cube_tiles/bottom = Vector2( 0, 0 )
cube_tiles/top = Vector2( 0, 0 )
cube_tiles/back = Vector2( 0, 0 )
cube_tiles/front = Vector2( 0, 0 )

[sub_resource type="VoxelLibrary" id=4]
voxels/0 = SubResource( 2 )
voxels/1 = SubResource( 3 )

[sub_resource type="VoxelMesherBlocky" id=5]
library = SubResource( 4 )

[sub_resource type="SpatialMaterial" id=6]
vertex_color_use_as_albedo = true
albedo_color = Color( 0.721569, 0.968627, 0.364706, 1 )

[sub_resource type="PlaneMesh" id=19]
size = Vector2( 512, 512 )

[sub_resource type="SpatialMaterial" id=20]
flags_transparent = true
albedo_color = Color( 0.345098, 0.772549, 1, 1 )
metallic = 1.0
metallic_specular = 0.74

[node name="Spatial" type="Spatial"]

[node name="VoxelLodTerrain" type="VoxelLodTerrain" parent="."]
generator = SubResource( 17 )
mesher = SubResource( 12 )
voxel_bounds = AABB( -256, -128, -256, 512, 256, 512 )
lod_count = 3
lod_distance = 128.0
material = SubResource( 14 )
script = ExtResource( 1 )

[node name="Camera" type="Camera" parent="VoxelLodTerrain"]
transform = Transform( 0.255395, 0.436497, -0.862696, 0, 0.892287, 0.451469, 0.966837, -0.115303, 0.227886, -125.479, 44.75, 110.555 )
far = 500.0

[node name="VoxelViewer" type="VoxelViewer" parent="VoxelLodTerrain/Camera"]
view_distance = 512

[node name="VoxelTerrain" type="VoxelTerrain" parent="."]
visible = false
generator = SubResource( 1 )
mesher = SubResource( 5 )
material/0 = SubResource( 6 )

[node name="water" type="MeshInstance" parent="."]
mesh = SubResource( 19 )
material/0 = SubResource( 20 )
